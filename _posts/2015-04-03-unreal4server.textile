---
layout: post
title: "虚幻4引擎作为游戏服务器评估"
description: "虚幻4引擎作为游戏服务器评估"
category: Development
tags: [UnrealEngine4]
---
{% include JB/setup %}

h2. 引擎提供的特性

---

概览:("Introduction to C++ Programming in UE4":https://docs.unrealengine.com/latest/INT/Programming/Introduction/index.html)

# 地图加载
# 碰撞检测
# 蓝图
# 网络连接("Networking & Multiplayer":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/index.html)
 ** "CS模型":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Server/index.html
 ** Socket连接和传输通道建立（引擎的C/S登录流程）：
  *** World.cpp 3619
  *** NMT_Hello
# 同步机制("Replication":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Example/index.html)
 ** 位置同步
  *** 角色移动组件("Character Movement Component":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/CharacterMovementComponent/index.html)
   **** 新增一个传送技能的示例
 ** 数据同步("Actor Replication":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/index.html)
  *** "Properties":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/Properties/index.html
   **** 同步不是瞬间发生的，每隔很短的时间会同步一次，所以同步并非立即生效。
   **** 如果属性在同一帧被反复更改多次，只有最终结果会被同步给客户端。如果最终结果相同，则不会同步给客户端。如血量100->80->50->100，和最初相同都是100，不会发生同步。
   **** 大概可以理解为，属性更改是在游戏逻辑中发生的。在游戏逻辑之外有个时间间隔很短的定时器，每隔一段时间检测有发生更改的属性并同步给客户端。
   **** 属性变化时，可以触发回调函数，通过指定ReplicatedUsing=OnRep_xxx来设置回调函数。OnRep_xxx函数必须加上UFUNCTION()以暴露给UE4，并且该函数只会在客户端执行，服务端如果需要执行，必须手动调用
  *** "RPCS":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/RPCs/index.html
   
  *** "Components":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/Components/index.html
   **** 如果想要将组件也同步给客户端，调用SetNetAddressable和SetIsReplicated
  *** 可以基于条件、相关性、距离来控制是否同步("Actor Relevancy and Priority":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/Relevancy/index.html)
   **** 基于距离控制是否同步:NetCullDistanceSquared
   **** 属性的同步控制:默认情况下Properties一旦发生改变就会同步给客户端，可以使用DOREPLIFETIME_CONDITION宏增加一些附加条件。
    ***** COND_InitialOnly:只在初始化时同步
	***** COND_OwnerOnly:只同步给Owner
	***** COND_SkipOwner:只同步给非Owner
	***** COND_SimulatedOnly:只同步给非玩家控制的Actor
	***** COND_AutonomousOnly: 只同步给玩家控制的Actor
	***** COND_SimulatedOrPhysics:只同步给有非玩家控制或者物理引擎模拟的Actor
	***** COND_InitialOrOwner:同步给Owner，其他人只在初始化时同步
	***** COND_Custom:无特定条件，但是可以切换开关状态通过SetCustomIsActiveOverride
   **** 上述条件如果还是无法满足，可以自定义同步条件，见宏DOREPLIFETIME_ACTIVE_OVERRIDE。需要注意的是该条件是基于Actor类型的，而不是基于单个客户端的。
    ***** 如果自定义条件变化很频繁的话，将会拖慢系统效率
	***** 不能基于每个客户端来指定条件
   **** Actor的同步控制
    ***** bReplicates:如果Actor有需要同步的属性，必须设置为true
	***** bAlwaysRelevant:Actor总是和所有客户端相关，将会同步给所有客户端
	***** bOnlyRelevantToOwner:只同步给Owner
	***** bNetLoadOnClient:是否需要从地图文件中加载Actor。如果是放置在地图上希望客户端看到的Actor，这项应该设置为true。(一般情况下大部分Actor都需要)
    ***** bTearOff:客户端获得完全控制权
	***** bReplicateMovement:自动同步Actor的位置给客户端, Pawns默认为true。
	***** 重载IsNetRelevantFor函数可以自定义网络相关性
  *** 服务器和客户端角色权限的区分("Actor Role and RemoteRole":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/Roles/index.html)
   **** ROLE_None:没有网络角色
   **** ROLE_Authority:服务端
   **** ROLE_SimulatedProxy:NPC，怪物，其他玩家角色等
   **** ROLE_AutonomousProxy:客户端当前玩家控制的角色
  *** 详细的同步流程("Detailed Actor Replication Flow":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/ReplicationFlow/index.html)
   **** 调试方法:
    ***** console command:"p.NetShowCorrections 1"
    ***** console command:"log LogNetPlayerMovement Verbose"
  *** 性能优化("Performance and Bandwidth Tips":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Actors/ReplicationPerformance/index.html)
# 垃圾回收和内存释放("Garbage Collection & Dynamic Memory Allocation":https://wiki.unrealengine.com/Garbage_Collection_%26_Dynamic_Memory_Allocation)
   
h2. 需要确认或者自己实现的特性

---

* 多地图
 ** 可否支持多地图？
  *** 世界地图,类似WOW那种，目前部分特性不支持网游使用("World Composition":https://docs.unrealengine.com/latest/INT/Engine/LevelStreaming/WorldBrowser/index.html)
  *** 静态多地图游服可以支持（目前只测试过两个地图，理论上可以支持任意多个）
 ** 如何切换？("Travelling in Multiplayer":https://docs.unrealengine.com/latest/INT/Gameplay/Networking/Travelling/index.html)
  *** 无缝切换
   **** ServerTravel：（服务器把所有玩家切到一张新地图去，适合开房间那种单地图的游戏）
   **** ClientTravel：(将某个客户端切换到地图)
   **** 目前只切换地图，并不会改变玩家坐标，需要进一步研究   
  *** 非无缝切换
   **** Browse：相当于硬切换，会将所有客户端踢下线
 ** 如何创建副本？--可以通过使用LevelStreamingKismet来添加副本

pre.. 
FName ATestLevelsCharacter::MakePackageNameByOrder(uint32 nOrder)
{
	FString InstanceUniqueName;
	InstanceUniqueName.AppendInt(nOrder);
	FString InstanceShortPackageName = GetWorld()->StreamingLevelsPrefix + FPackageName::GetShortName(InstanceUniqueName);
	FString InstancePackagePath = FPackageName::GetLongPackagePath(TEXT("/Game/ThirdPerson/Maps/Map1")) + TEXT("/");
	FName	InstanceUniquePackageName = FName(*(InstancePackagePath + InstanceShortPackageName));
	return InstanceUniquePackageName;
}

pre.. 
FName	InstanceUniquePackageName = this->MakePackageNameByOrder(nOrder);
// check if instance name is unique among existing streaming level objects
const bool bUniqueName = (GetWorld()->StreamingLevels.IndexOfByPredicate(ULevelStreaming::FPackageNameMatcher(InstanceUniquePackageName)) == INDEX_NONE);
ULevelStreamingKismet* StreamingLevel = static_cast<ULevelStreamingKismet*>(StaticConstructObject(ULevelStreamingKismet::StaticClass(), GetWorld(), NAME_None, RF_NoFlags, NULL));
StreamingLevel->bShouldBeLoaded = true;
StreamingLevel->bShouldBeVisible = true;
StreamingLevel->bShouldBlockOnLoad = false;
StreamingLevel->bInitiallyLoaded = true;
StreamingLevel->bInitiallyVisible = true;
StreamingLevel->LevelTransform.SetLocation(FVector(2000 * nOrder, 0, 0));
StreamingLevel->PackageNameToLoad = TEXT("/Game/ThirdPerson/Maps/Map1");
StreamingLevel->SetWorldAssetByPackageName(InstanceUniquePackageName);
GetWorld()->StreamingLevels.Add(StreamingLevel);

p. 
* 多线程
 ** 是否支持多线程？--支持，本身游服有十几个线程，游戏逻辑线程是GameThread
 ** 内置线程池的作用？--(从源码来看，线程池是用来做一些杂事的，比如SVN源码管理，同步和后台任务等)
 ** 为何ServerOnly时，线程池只保留一个线程？--(还未细看，目前猜测是这个线程池对游服基本没用，但是必须有一个线程才能把线程池创建起来)
 ** "如何使用多线程？(FRunnable)":https://wiki.unrealengine.com/Multi-Threading:_How_to_Create_Threads_in_UE4
* 版本匹配问题
 ** C/S版本不同是否可以登录？
  *** NMT_Hello
  *** FNetworkVersion::GetLocalNetworkVersion()
  *** FNetworkVersion::IsNetworkCompatible(LocalNetworkVersion, RemoteNetworkVersion)
* 性能问题
 ** 最多可承载客户端数量是多少？
 ** 假设有2000人客户端，同时能承受多少个AI
 ** 最低性能需求：2000客户端，50000AI
* 数据库连接
 ** "如何集成第三方库？":https://wiki.unrealengine.com/Linking_Static_Libraries_Using_The_Build_System
 ** 使用什么第三方库？
 
h2. 内容示例(ContentExamples)索引

---

"官方文档":https://docs.unrealengine.com/latest/INT/Resources/ContentExamples/index.html

* 网络相关：Network_Features

h2. 参考资料

***

# "官方英文手册":https://docs.unrealengine.com/latest/INT/
# "中文手册":http://unrealchina.org/minibook/
 ** 非官方提供，渣翻译质量
 ** 有能力还是建议直接看英文原版
# "开发环境配置（强烈建议按照推荐设置）":https://docs.unrealengine.com/latest/INT/Programming/Development/VisualStudioSetup/index.html
 ** 用VS2013Cummunity只要配置以下几步
  ***　１.Increase the width of the Solution Configurations dropdown menu
  *** Turn off Show Inactive Blocks. If you do not, many chunks of code may appear grayed out in the text editor. (Tools > Options > Text Editor > C/C++ > View).
  *** Turn off Edit & Continue features, you do not need them. (Tools > Options > Debugging > Edit and Continue)
  *** Turn off Format After Paste. It does weird things sometimes. (VAssistX > Visual Assist X Options > Advanced > Corrections)
# 英文电子书
 ** "Learning.C++.by.Creating.Games.with.UE4.2015":http://pan.baidu.com/s/1pnUMi 提取码:xse6
  *** "随书code":http://pan.baidu.com/s/1qWv7daW 提取码:bx5i
# "官方视频教程":https://wiki.unrealengine.com/Videos
# "DigitalTutors的视频教程":http://www.digitaltutors.com/software/Unreal-Engine-tutorials
# "老外整理的关于MMO框架、第三方库和UE4网络相关特性的汇总贴":https://forums.unrealengine.com/showthread.php?22928-Next-Gen-MMO-Plug-in-for-UE4
# "独立服务器使用指引":https://wiki.unrealengine.com/Dedicated_Server_Guide_(Windows_%26_Linux)
# "性能和配置":https://docs.unrealengine.com/latest/INT/Engine/Performance/index.html
# UE4网络特性的相关参考
 ** "Network Replication, Using ReplicatedUsing / RepNotify vars":https://wiki.unrealengine.com/Network_Replication,_Using_ReplicatedUsing_/_RepNotify_vars
 ** "Networking/Replication":https://wiki.unrealengine.com/Networking/Replication
 ** "NETWORK TIPS AND TRICKS":https://www.unrealengine.com/blog/network-tips-and-tricks
 ** "FINDING NETWORK-BASED EXPLOITS":https://www.unrealengine.com/blog/finding-network-based-exploits
 ** "Replication":https://wiki.unrealengine.com/Replication
 ** "New Blueprint Networking Tutorial Videos Posted":https://forums.unrealengine.com/showthread.php?2956-New-Blueprint-Networking-Tutorial-Videos-Posted&p=20354
# 编码规范("Coding Standard":https://docs.unrealengine.com/latest/INT/Programming/Development/CodingStandard/index.html)
# "如何从零开始手动创建一个FPS游戏（可以了解一下FPS模板为我们做了哪些事，我们自己如何实现）？":https://wiki.unrealengine.com/First_Person_Shooter_C%2B%2B_Tutorial#Starting_a_New_Project
# "C++ Code官方WIKI":https://wiki.unrealengine.com/Category:Code

h2. 关于性能测试DEMO

---

h3. 第一阶段

制作了一个初级性能测试DEMO，试图模拟这样一个场景：一张大地图上，有很多怪， 玩家分布在地图各处，不停的发生战斗

# 生成10000个角色（无网络连接）
# 角色每隔几秒会发出一个炸弹
# 炸弹有碰撞，会爆炸，爆炸会造成伤害

DEMO测试结果（全部是PC端测试）：
# 如果不限制广播范围，即10000个角色和炸弹不停的爆炸，将会导致客户端卡死，帧率掉到10帧以下，无法测试服务器情况
# 将广播范围限制在2000米（同屏可以看到的约为25人）
 ** 客户端非常流畅，但是服务器卡顿非常严重
 ** 新生成的炸弹无法及时同步给客户端，导致客户端走路频繁被踢回
 ** 客户端走进广播范围内无法及时同步角色，过了很久突然出现在身边
 ** 走到足够远的时候，客户端人物阴影好像出现了问题，半边人物发黑
 ** 服务器CPU占用率只有25%
 
原因猜想：
# 生成炸弹的时间随机范围是10秒，共有10000个角色，因此平均情况是每秒需要处理1000处战斗，最坏情况是每秒要处理10000处战斗
# 从真实玩家操作角度考虑，这里相当于有3-5K的玩家同时游戏（当然这里仅考虑战斗部分，其他游戏业务逻辑并没有计算进去）
# 这个量级可以考虑为已经远远超过目前手机魔域的实际运营的承载量了
# 是不是应该使用更加真实的情况来模拟？
# 这个量级是不是真的已经超过我们现在的承载情况了？


h2. 杂记

---

# 代码编译完成后编辑器崩溃
 ** 一般都是代码问题导致的
 ** 在构造函数中绑定按键映射
 
h2. 工作计划

---

h3. 3月30日-4月3日（投入3天）

# 网络连接框架
# Socket连接和传输通道建立（引擎的C/S登录流程）
# 引擎的同步机制

h3. 4月6日-4月10日（投入2天）
# 服务器多地图支持，地图切换机制
# 引擎的多线程支持
# 版本兼容性（更改消息后旧版本客户端是否可以登录新版游服）
 
h3. 4月13日-4月17日（投入3天）
# 详细了解引擎Replication和RPC机制
# 制作了一个初级性能测试DEMO（生成10000个角色（无网络连接），角色每隔几秒会发出一个炸弹，炸弹有碰撞，会爆炸，爆炸会造成伤害）。

h3. 4月20日-4月24日(投入2天)
# 副本地图动态创建和删除
# 将demo修改为只生成10000个角色（无连接）。没有任何动作，服务器没有其他业务，本地延迟在300-500ms，如果人数降到1000人则非常流畅。并且服务器本身收发包和游戏业务在同一个线程。从目前测试结果来看，unreal4的服务器无法满足作为mmo服务器的要求，需要自己实现一套服务器框架。

h3. 4月27日-4月30日（投入2天）
# 研究如何unreal4的移植导航网格部分供服务器使用